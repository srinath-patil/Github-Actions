name: CICD Pipeline

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: self-hosted
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Maven install
      run: sudo apt install maven -y
    - name: Build with Maven
      run: mvn compile

  security-check:
    runs-on: self-hosted
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    - name: Trivy install
      run: |
        sudo apt-get install wget gnupg
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y
    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json .
    - name: Gitleak install
      run: sudo apt install gitleaks -y 
    - name: Gitleak scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: self-hosted
    needs: security-check
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: unit-test
      run: mvn test
    - name: Upload_JAR_File
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: target/*.jar

  build_sonarscan:
    runs-on: self-hosted
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.3.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL
  

  build-docker-image:
    runs-on: self-hosted
    needs: build_sonarscan
    
    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/checkout@v4
      with:
        name: app-jar
        path: app #this will download JAR to ./app folder
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: spatil24/app:latest
    
